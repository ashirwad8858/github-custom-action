name: Deployment
on:
  push:
    branches:
      - main
jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Get code
  #       uses: actions/checkout@v3
  #     - name: "my custom action for dependencies"
  #       uses: ./.github/actions/cached-dep
  #     - name: Lint code
  #       run: npm run lint
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Get code
  #       uses: actions/checkout@v3
  #     - name: "my custom action for dependencies"
  #       uses: ./.github/actions/cached-dep
  #     - name: Test code
  #       id: run-tests
  #       run: npm run test
  #     - name: Upload test report
  #       if: failure() && steps.run-tests.outcome == 'failure'
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: test-report
  #         path: test.json
  build:
    # needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
      # - name: Install Python
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: '3.x'

      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r requirements.txt
      - name: Send email using custom action
        uses: ./.github/actions/notification
        with:
          smtp_server: ${{ secrets.SMTP_SERVER }}
          smtp_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          from_email: ${{ secrets.SMTP_USERNAME }}
          to_email: ashirwadsharma12795@gmail.com
          # attachments: " path/to/attachment2"
      # - name: Send email #--attachments path
      #   run: |
      #     python3 ./script/mail.py --smtp_server="smtp.gmail.com" --smtp_port=587 --username="${{ secrets.SMTP_USERNAME }}" --password="${{ secrets.SMTP_PASSWORD }}" --from_email="${{ secrets.SMTP_USERNAME }}" --to_email="ashirwadsharma12795@gmail.com" 
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Deploy site
        run: echo "Deploying..."

  # notification:
  #   needs: deploy
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Send Email Notification
  #       uses: dawidd6/action-send-mail@v3
  #       with:
  #         server_address: smtp.gmail.com
  #         server_port: 587
  #         username: ${{ secrets.SMTP_USERNAME }}
  #         password: ${{ secrets.SMTP_PASSWORD }}
  #         subject: GitHub Actions Job Notification
  #         body: The job has completed successfully!
  #         to: ashirwadsharma12795@gmail.com
  #         from: ${{ secrets.SMTP_USERNAME }}
  #         secure: false
      # - name: Send mail
      #   uses: dawidd6/action-send-mail@v3
      #   with:
      #     # Specify connection via URL (replaces server_address, server_port, secure,
      #     # username and password)
      #     #
      #     # Format:
      #     #
      #     #  * smtp://user:password@server:port
      #     #  * smtp+starttls://user:password@server:port
      #     connection_url: ${{secrets.MAIL_CONNECTION}}
      #     # Required mail server address if not connection_url:
      #     server_address: smtp.gmail.com
      #     # Server port, default 25:
      #     server_port: 465
      #     # Optional whether this connection use TLS (default is true if server_port is 465)
      #     secure: true
      #     # Optional (recommended) mail server username:
      #     username: ${{secrets.MAIL_USERNAME}}
      #     # Optional (recommended) mail server password:
      #     password: ${{secrets.MAIL_PASSWORD}}
      #     # Required mail subject:
      #     subject: Github Actions job result
      #     # Required recipients' addresses:
      #     to: obiwan@example.com,yoda@example.com
      #     # Required sender full name (address can be skipped):
      #     from: Luke Skywalker # <user@example.com>
      #     # Optional plain body:
      #     body: Build job of ${{github.repository}} completed successfully!
      #     # Optional HTML body read from file:
      #     html_body: file://README.html
      #     # Optional carbon copy recipients:
      #     cc: kyloren@example.com,leia@example.com
      #     # Optional blind carbon copy recipients:
      #     bcc: r2d2@example.com,hansolo@example.com
      #     # Optional recipient of the email response:
      #     reply_to: luke@example.com
      #     # Optional Message ID this message is replying to:
      #     in_reply_to: <random-luke@example.com>
      #     # Optional unsigned/invalid certificates allowance:
      #     ignore_cert: true
      #     # Optional converting Markdown to HTML (set content_type to text/html too):
      #     convert_markdown: true
      #     # Optional attachments:
      #     attachments: attachments.zip,git.diff,./dist/static/*.js
      #     # Optional priority: 'high', 'normal' (default) or 'low'
      #     priority: low
      #     # Optional nodemailerlog: true/false
      #     nodemailerlog: false
      #     # Optional nodemailerdebug: true/false if true lognodem will also be set true
      #     nodemailerdebug: false
      

